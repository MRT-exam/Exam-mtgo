version: '3.8'
services:
  # System Integration Services
  eureka-server:
    container_name: eureka-server
    build:
      context: ./exam-discovery-server
      dockerfile: Dockerfile
    ports: 
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - exam-mtgo

  api-gateway:
    container_name: api-gateway
    build:
      context: ./exam-api-gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - exam-mtgo

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - exam-mtgo

  # Microservices & Databases
  mysqldb-order-service:
    container_name: mysqldb-order-service
    image: mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: order_service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin1234
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - exam-mtgo

  order-service-app:
    container_name: order-service
    build:
      context: ./exam-order-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysqldb-order-service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin1234
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - exam-mtgo

  mongo_db:
    image: mongo:latest
    container_name: "mongo"
    ports:
      - "27017:27017"
    networks:
      - exam-mtgo

  restaurant-service-app:
    container_name: restaurant-service
    build:
      context: ./exam-restaurant-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
        SPRING_PROFILES_ACTIVE: docker
    networks:
      - exam-mtgo

  mysqldb-delivery-service:
    container_name: mysqldb-delivery-service
    image: mysql
    restart: unless-stopped
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: delivery_service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin1234
      MYSQL_ROOT_PASSWORD: root1234
    networks:
      - exam-mtgo

  delivery-service-app:
    container_name: delivery-service
    build:
      context: ./exam-delivery-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysqldb-delivery-service
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin1234
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - exam-mtgo

  # Performance & Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
     - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - order-service-app
      - restaurant-service-app
      - delivery-service-app
    networks:
      - exam-mtgo

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    networks:
      - exam-mtgo

  # Security
  # 0authKeycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:23.0.1
  #   ports:
  #     - "8282:8080"
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #   command: start-dev
  #   networks:
  #     - exam-mtgo

networks:
  exam-mtgo:
